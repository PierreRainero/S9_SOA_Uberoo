version: "2.1"

services:
  messageBus:
    container_name: soa_messageBus
    image: "soa/bus"
    ports:
      - "5001:5000"
    expose:
      - "5001"

  orderService_database: # database for orderService
    container_name: soa_orderService_database
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=teama
      - MYSQL_DATABASE=uberoo
    expose:
      - "3306"
    healthcheck: # condition to consider the bd is ready
      test: 'mysqladmin ping --silent'

  orderService:
    container_name: soa_orderService
    image: "soa/wb/orderservice"
    ports:
      - "9555:8080"
    expose:
      - "9555"
    restart: always # if db is up too early, restart
    links: # for the hostname mapping
      - orderService_database 
      - messageBus
    depends_on:
      orderService_database: # wait for db to be up
        condition: service_healthy

  coursierService_database: # database for coursierservice
    container_name: soa_coursierService_database
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=teama
      - MYSQL_DATABASE=uberoo
    expose:
      - "3306"
    healthcheck: # condition to consider the bd is ready
      test: 'mysqladmin ping --silent'

  coursierservice:
    container_name: soa_coursierService
    image: "soa/wb/coursierservice"
    ports:
      - "9666:8080"
    links: # for the hostname mapping
      - coursierService_database
      - messageBus
    expose:
      - "9666"
    restart: always # if db is up too early, restart
    depends_on:
      coursierService_database: # wait for db to be up
        condition: service_healthy

  restaurantService_database: # database for coursierservice
    container_name: soa_restaurantService_database
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=teama
      - MYSQL_DATABASE=uberoo
    expose:
      - "3306"
    healthcheck: # condition to consider the bd is ready
      test: 'mysqladmin ping --silent'

  restaurantservice:
    container_name: soa_restaurantService
    image: "soa/wb/restaurantservice"
    ports:
    - "9777:8080"
    expose:
    - "9777"
    restart: always # if db is up too early, restart
    links: # for the hostname mapping
      - restaurantService_database 
      - messageBus
    depends_on:
      restaurantService_database: # wait for db to be up
        condition: service_healthy