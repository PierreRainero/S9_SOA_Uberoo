version: "2.1"

services:
  uberoo_database: # database for orderService
    container_name: soa_database
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=teama
    volumes:
    - ./database:/docker-entrypoint-initdb.d
    expose:
      - "3306"
    healthcheck: # condition to consider the bd is ready
      test: "mysqladmin ping --silent"

  orderService:
    container_name: soa_orderService
    image: "soa/wb/orderservice"
    ports:
      - "9555:8080"
    expose:
      - "9555"
    restart: always # if db is up too early, restart
    links: # for the hostname mapping
      - uberoo_database
      - kafka
    depends_on:
      uberoo_database: # wait for db to be up
        condition: service_healthy

  coursierservice:
    container_name: soa_coursierService
    image: "soa/wb/coursierservice"
    ports:
      - "9888:8080"
    links: # for the hostname mapping
      - uberoo_database
      - kafka
    expose:
      - "9888"
    restart: always # if db is up too early, restart
    depends_on:
      uberoo_database: # wait for db to be up
        condition: service_healthy

  restaurantservice:
    container_name: soa_restaurantService
    image: "soa/wb/restaurantservice"
    ports:
      - "9777:8080"
    expose:
      - "9777"
    restart: always # if db is up too early, restart
    links: # for the hostname mapping
      - uberoo_database
      - kafka
    depends_on:
      uberoo_database: # wait for db to be up
        condition: service_healthy
  bankservice:
    container_name: soa_bank
    image: "soa/bank"
    links: # for the hostname mapping
      - kafka
    restart: always
    depends_on:
      kafka:
        condition: service_healthy
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181
  kafka:
    image: wurstmeister/kafka
    links:
      - zookeeper:zk
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: "kafka"
      KAFKA_ADVERTISED_PORT: "9092"
      KAFKA_CREATE_TOPICS: "topic:1:1"
      KAFKA_ZOOKEEPER_CONNECT: "zk:2181"
    healthcheck:
      test: "kafka-topics.sh --zookeeper zookeeper:2181 --list 2>&1 | grep \"topic\""

# Add to containers talking to Kafka:
# links:
#     - kafka
#
# Test:
# docker-compose up
# docker exec -it <container_kafka_id> bash
# kafka-console-producer.sh --broker-list localhost:9092 --topic topic
# <Write some messages, then CTRL-C>
# kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic topic --from-beginning
# Your messages are being read WOW
